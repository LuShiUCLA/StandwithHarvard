#--------------------------------------------------------------
# PAD Screening Cost-Effectiveness Analysis - Updated Full R Program
#--------------------------------------------------------------

# Load required packages
if (!require("pacman")) install.packages("pacman")
pacman::p_load(dplyr, tidyr, ggplot2, openxlsx)

#-------------------------
# 1. Updated Model Parameters
#-------------------------
params <- list(
  cohort_size = 100000,
  base_age = 50,
  retirement_age = 68,
  screen_cost = 200,  # ABI + visit
  
  # Annual transition probabilities
  probabilities = list(
    screen = list(
      mace = 0.025,        # 50% RR vs no-screening
      amputation = 0.012,  # 40% RR vs no-screening
      death = 0.028,       # 30% RR vs no-screening
      revasc = 0.035       # 30% RR vs no-screening
    ),
    no_screen = list(
      mace = 0.050,
      amputation = 0.020,
      death = 0.040,
      revasc = 0.050
    )
  ),
  
  # Cost inputs (2023 USD)
  costs = list(
    mace = 20000,
    amputation = 50000,
    revasc = 12000,
    padcare = 1500,
    productivity = 35000,
    welfare = 15000
  ),
  
  # QALY weights
  qaly_weights = list(
    healthy = 1.00,
    pad = 0.80,
    mace = 0.65,
    amputation = 0.54,
    death = 0.00
  )
)

#-------------------------
# 2. Simulation Function
#-------------------------
simulate_strategy <- function(strategy, max_years) {
  living <- rep(TRUE, params$cohort_size)
  age <- params$base_age
  results <- list()
  
  cumulative_mace <- cumulative_amputation <- cumulative_revasc <- cumulative_deaths <- 0
  
  for (year in 1:max_years) {
    if (age >= params$retirement_age) break
    
    p <- params$probabilities[[strategy]]
    at_risk <- sum(living)
    
    new_deaths <- rbinom(1, at_risk, p$death)
    new_mace <- rbinom(1, at_risk - new_deaths, p$mace)
    new_amputation <- rbinom(1, at_risk - new_deaths - new_mace, p$amputation)
    new_revasc <- rbinom(1, at_risk - new_deaths - new_mace - new_amputation, p$revasc)
    
    cumulative_deaths <- cumulative_deaths + new_deaths
    cumulative_mace <- cumulative_mace + new_mace
    cumulative_amputation <- cumulative_amputation + new_amputation
    cumulative_revasc <- cumulative_revasc + new_revasc
    
    if (new_deaths > 0) living[sample(which(living), new_deaths)] <- FALSE
    
    results[[year]] <- data.frame(
      year = year,
      strategy = strategy,
      living = sum(living),
      mace = cumulative_mace,
      amputation = cumulative_amputation,
      revasc = cumulative_revasc,
      deaths = cumulative_deaths
    )
    
    age <- age + 1
  }
  
  bind_rows(results) %>%
    filter(year == max(year)) %>%
    mutate(
      productive_years = pmax(0, params$retirement_age - (params$base_age + year)),
      payer_cost = mace * params$costs$mace +
        amputation * params$costs$amputation +
        revasc * params$costs$revasc +
        params$cohort_size * params$costs$padcare * year +
        ifelse(strategy == "screen", params$screen_cost * params$cohort_size, 0),
      
      societal_cost = payer_cost + deaths * (params$costs$productivity + params$costs$welfare) * productive_years,
      
      qaly = living * params$qaly_weights$pad -
        (mace * (params$qaly_weights$pad - params$qaly_weights$mace) +
           amputation * (params$qaly_weights$pad - params$qaly_weights$amputation) +
           deaths * params$qaly_weights$pad)
    )
}

#-------------------------
# 3. Analysis Function
#-------------------------
analyze_strategies <- function(horizons = c(5, 15, 30)) {
  map_dfr(horizons, function(h) {
    screen <- simulate_strategy("screen", h)
    control <- simulate_strategy("no_screen", h)
    
    data.frame(
      horizon = h,
      deaths_averted = control$deaths - screen$deaths,
      mace_averted = control$mace - screen$mace,
      amputation_averted = control$amputation - screen$amputation,
      payer_saving = control$payer_cost - screen$payer_cost,
      societal_saving = control$societal_cost - screen$societal_cost,
      qaly_gain = screen$qaly - control$qaly
    )
  }) %>%
    mutate(across(-horizon, ~ ./params$cohort_size * 1000))
}

#-------------------------
# 4. Run Analysis
#-------------------------
set.seed(2023)
results <- analyze_strategies()

#-------------------------
# 5. Visualization
#-------------------------
ggplot(results %>% 
         pivot_longer(-horizon, names_to = "metric") %>%
         mutate(metric = factor(metric,
                                levels = c("deaths_averted", "mace_averted", "amputation_averted",
                                           "payer_saving", "societal_saving", "qaly_gain"),
                                labels = c("Deaths Averted/1000", "MACE Averted/1000", 
                                           "Amputations Averted/1000", "Payer Savings ($/capita)",
                                           "Societal Savings ($/capita)", "QALY Gain/1000"))),
       aes(x = factor(horizon), y = value)) +
  geom_col(fill = "steelblue", width = 0.7) +
  facet_wrap(~metric, scales = "free_y", ncol = 3) +
  labs(title = "PAD Screening Cost-Effectiveness Analysis",
       subtitle = "Per 1,000 Population Comparison",
       x = "Time Horizon (Years)",
       y = "Value") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

#-------------------------
# 6. Export to Excel
#-------------------------
write.xlsx(list(
  Parameters = data.frame(
    Parameter = names(unlist(params)),
    Value = unlist(params)
  ),
  Results = results
), "PAD_Analysis_Results_Updated.xlsx")
